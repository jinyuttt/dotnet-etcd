// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: lease.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Leasepb {

  /// <summary>Holder for reflection information generated from lease.proto</summary>
  public static partial class LeaseReflection {

    #region Descriptor
    /// <summary>File descriptor for lease.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LeaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtsZWFzZS5wcm90bxIHbGVhc2VwYhoKZ29nby5wcm90bxoJcnBjLnByb3Rv",
            "IjYKBUxlYXNlEgoKAklEGAEgASgDEgsKA1RUTBgCIAEoAxIUCgxSZW1haW5p",
            "bmdUVEwYAyABKAMiXAoUTGVhc2VJbnRlcm5hbFJlcXVlc3QSRAoWTGVhc2VU",
            "aW1lVG9MaXZlUmVxdWVzdBgBIAEoCzIkLmV0Y2RzZXJ2ZXJwYi5MZWFzZVRp",
            "bWVUb0xpdmVSZXF1ZXN0Il8KFUxlYXNlSW50ZXJuYWxSZXNwb25zZRJGChdM",
            "ZWFzZVRpbWVUb0xpdmVSZXNwb25zZRgBIAEoCzIlLmV0Y2RzZXJ2ZXJwYi5M",
            "ZWFzZVRpbWVUb0xpdmVSZXNwb25zZUIUyOIeAeDiHgHQ4h4ByOEeANDhHgBi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Gogoproto.GogoReflection.Descriptor, global::Etcdserverpb.RpcReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Leasepb.Lease), global::Leasepb.Lease.Parser, new[]{ "ID", "TTL", "RemainingTTL" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Leasepb.LeaseInternalRequest), global::Leasepb.LeaseInternalRequest.Parser, new[]{ "LeaseTimeToLiveRequest" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Leasepb.LeaseInternalResponse), global::Leasepb.LeaseInternalResponse.Parser, new[]{ "LeaseTimeToLiveResponse" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Lease : pb::IMessage<Lease> {
    private static readonly pb::MessageParser<Lease> _parser = new pb::MessageParser<Lease>(() => new Lease());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Lease> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Leasepb.LeaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lease() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lease(Lease other) : this() {
      iD_ = other.iD_;
      tTL_ = other.tTL_;
      remainingTTL_ = other.remainingTTL_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lease Clone() {
      return new Lease(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private long iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "TTL" field.</summary>
    public const int TTLFieldNumber = 2;
    private long tTL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TTL {
      get { return tTL_; }
      set {
        tTL_ = value;
      }
    }

    /// <summary>Field number for the "RemainingTTL" field.</summary>
    public const int RemainingTTLFieldNumber = 3;
    private long remainingTTL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RemainingTTL {
      get { return remainingTTL_; }
      set {
        remainingTTL_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Lease);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Lease other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (TTL != other.TTL) return false;
      if (RemainingTTL != other.RemainingTTL) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0L) hash ^= ID.GetHashCode();
      if (TTL != 0L) hash ^= TTL.GetHashCode();
      if (RemainingTTL != 0L) hash ^= RemainingTTL.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ID);
      }
      if (TTL != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TTL);
      }
      if (RemainingTTL != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RemainingTTL);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ID);
      }
      if (TTL != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TTL);
      }
      if (RemainingTTL != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RemainingTTL);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Lease other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0L) {
        ID = other.ID;
      }
      if (other.TTL != 0L) {
        TTL = other.TTL;
      }
      if (other.RemainingTTL != 0L) {
        RemainingTTL = other.RemainingTTL;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt64();
            break;
          }
          case 16: {
            TTL = input.ReadInt64();
            break;
          }
          case 24: {
            RemainingTTL = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaseInternalRequest : pb::IMessage<LeaseInternalRequest> {
    private static readonly pb::MessageParser<LeaseInternalRequest> _parser = new pb::MessageParser<LeaseInternalRequest>(() => new LeaseInternalRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaseInternalRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Leasepb.LeaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaseInternalRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaseInternalRequest(LeaseInternalRequest other) : this() {
      leaseTimeToLiveRequest_ = other.leaseTimeToLiveRequest_ != null ? other.leaseTimeToLiveRequest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaseInternalRequest Clone() {
      return new LeaseInternalRequest(this);
    }

    /// <summary>Field number for the "LeaseTimeToLiveRequest" field.</summary>
    public const int LeaseTimeToLiveRequestFieldNumber = 1;
    private global::Etcdserverpb.LeaseTimeToLiveRequest leaseTimeToLiveRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Etcdserverpb.LeaseTimeToLiveRequest LeaseTimeToLiveRequest {
      get { return leaseTimeToLiveRequest_; }
      set {
        leaseTimeToLiveRequest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaseInternalRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaseInternalRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LeaseTimeToLiveRequest, other.LeaseTimeToLiveRequest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (leaseTimeToLiveRequest_ != null) hash ^= LeaseTimeToLiveRequest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (leaseTimeToLiveRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LeaseTimeToLiveRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (leaseTimeToLiveRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeaseTimeToLiveRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaseInternalRequest other) {
      if (other == null) {
        return;
      }
      if (other.leaseTimeToLiveRequest_ != null) {
        if (leaseTimeToLiveRequest_ == null) {
          LeaseTimeToLiveRequest = new global::Etcdserverpb.LeaseTimeToLiveRequest();
        }
        LeaseTimeToLiveRequest.MergeFrom(other.LeaseTimeToLiveRequest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (leaseTimeToLiveRequest_ == null) {
              LeaseTimeToLiveRequest = new global::Etcdserverpb.LeaseTimeToLiveRequest();
            }
            input.ReadMessage(LeaseTimeToLiveRequest);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaseInternalResponse : pb::IMessage<LeaseInternalResponse> {
    private static readonly pb::MessageParser<LeaseInternalResponse> _parser = new pb::MessageParser<LeaseInternalResponse>(() => new LeaseInternalResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaseInternalResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Leasepb.LeaseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaseInternalResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaseInternalResponse(LeaseInternalResponse other) : this() {
      leaseTimeToLiveResponse_ = other.leaseTimeToLiveResponse_ != null ? other.leaseTimeToLiveResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaseInternalResponse Clone() {
      return new LeaseInternalResponse(this);
    }

    /// <summary>Field number for the "LeaseTimeToLiveResponse" field.</summary>
    public const int LeaseTimeToLiveResponseFieldNumber = 1;
    private global::Etcdserverpb.LeaseTimeToLiveResponse leaseTimeToLiveResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Etcdserverpb.LeaseTimeToLiveResponse LeaseTimeToLiveResponse {
      get { return leaseTimeToLiveResponse_; }
      set {
        leaseTimeToLiveResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaseInternalResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaseInternalResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LeaseTimeToLiveResponse, other.LeaseTimeToLiveResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (leaseTimeToLiveResponse_ != null) hash ^= LeaseTimeToLiveResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (leaseTimeToLiveResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LeaseTimeToLiveResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (leaseTimeToLiveResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeaseTimeToLiveResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaseInternalResponse other) {
      if (other == null) {
        return;
      }
      if (other.leaseTimeToLiveResponse_ != null) {
        if (leaseTimeToLiveResponse_ == null) {
          LeaseTimeToLiveResponse = new global::Etcdserverpb.LeaseTimeToLiveResponse();
        }
        LeaseTimeToLiveResponse.MergeFrom(other.LeaseTimeToLiveResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (leaseTimeToLiveResponse_ == null) {
              LeaseTimeToLiveResponse = new global::Etcdserverpb.LeaseTimeToLiveResponse();
            }
            input.ReadMessage(LeaseTimeToLiveResponse);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
